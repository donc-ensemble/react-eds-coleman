{"version":3,"file":"blocks/cards/cards.js","mappings":"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","sources":["webpack://eds-react-coleman/./src/blocks/cards/cards.scss?67c0","webpack://eds-react-coleman/./src/blocks/cards/cards.tsx","webpack://eds-react-coleman/./src/blocks/cards/cards.scss"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./cards.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./cards.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./cards.scss\";\n\ntype CardsProps = {\n  cards: Card[];\n  showSecondButton: boolean;\n};\n\ntype Card = {\n  bodySide: {\n    title: string | undefined;\n    textBody: string | undefined;\n    firstButtonText: string;\n    firstButtonHref: string;\n    secondButtonHref?: string | null;\n    secondButtonText?: string | null;\n  };\n  imageSide: {\n    imgSrc: string;\n    imgSourceSrc: string;\n    imgSourceType: string;\n    text: string | undefined;\n  };\n};\n\nconst extractContentFromDOM = (block: HTMLElement): CardsProps => {\n  const cards: Card[] = [];\n\n  [...block.children].forEach((row) => {\n    if (row.firstElementChild) {\n      const firstChild = row.firstElementChild;\n      const secondChild = firstChild.nextElementSibling!;\n      const imgSourceType = firstChild\n        .querySelector(\"source\")!\n        .getAttribute(\"type\")!;\n      const imgSourceSrc = firstChild\n        .querySelector(\"source\")!\n        .getAttribute(\"srcset\")!;\n      const img = firstChild\n        .querySelector(\"img\")!\n        .getAttribute(\"src\")!\n        .replace(\"format=png\", \"format=webply\")!;\n      const text = firstChild.querySelector(\"p:nth-of-type(2)\")?.innerHTML;\n      const title = secondChild?.querySelector(\"p strong\")?.innerHTML;\n      const textBody =\n        secondChild?.querySelector(\"p:nth-of-type(2)\")?.innerHTML;\n      const [firstButton, secondButton] = secondChild.querySelectorAll(\n        \"p.button-container a\",\n      );\n      const firstButtonHref = firstButton.getAttribute(\"href\")!;\n      const firstButtonText = firstButton.innerHTML;\n      const secondButtonHref = secondButton?.getAttribute(\"href\");\n      const secondButtonText = secondButton?.innerHTML;\n\n      const card: Card = {\n        imageSide: {\n          imgSourceType: imgSourceType,\n          imgSourceSrc: imgSourceSrc,\n          imgSrc: img,\n          text,\n        },\n        bodySide: {\n          title: title,\n          textBody: textBody,\n          firstButtonHref: firstButtonHref,\n          firstButtonText: firstButtonText,\n          secondButtonHref: secondButtonHref,\n          secondButtonText: secondButtonText,\n        },\n      };\n      cards.push(card);\n    }\n  });\n\n  return {\n    cards,\n    showSecondButton: block.classList.contains(\"grid-3\"),\n  };\n};\n\nexport const Cards: React.FC<CardsProps> = ({\n  cards,\n  showSecondButton,\n}: CardsProps) => {\n  return (\n    <div className={\"cards-container\"}>\n      {cards?.map((card, index) => (\n        <div className={\"cards-element\"} key={index}>\n          <div className={\"cards-card-image\"}>\n            <p>\n              <picture>\n                <source\n                  type={card.imageSide.imgSourceType}\n                  srcSet={card.imageSide.imgSourceSrc}\n                ></source>\n                <img\n                  loading=\"lazy\"\n                  alt=\"\"\n                  src={card.imageSide.imgSrc.replace(\n                    \"format=png\",\n                    \"format=webply\",\n                  )}\n                />\n              </picture>\n            </p>\n            <p>{card.imageSide.text}</p>\n          </div>\n          <div className={\"cards-card-body\"}>\n            <p>\n              <strong>{card.bodySide.title}</strong>\n            </p>\n            <p>{card.bodySide.textBody}</p>\n            <p className=\"button-container\">\n              <a\n                href={card.bodySide.firstButtonHref}\n                title={card.bodySide.firstButtonText}\n                className=\"button\"\n              >\n                {card.bodySide.firstButtonText}\n              </a>\n            </p>\n            {showSecondButton && (\n              <p className=\"button-container\">\n                <a\n                  href={card.bodySide.secondButtonHref!}\n                  title={card.bodySide.secondButtonText!}\n                  className=\"button\"\n                >\n                  {card.bodySide.secondButtonText}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\nCards.displayName = \"Cards\";\n\nconst decorate = async (block: HTMLElement) => {\n  const cardsProps = extractContentFromDOM(block);\n\n  ReactDOM.createRoot(block).render(\n    <StrictMode>\n      <Cards {...cardsProps} />\n    </StrictMode>,\n  );\n};\n\nexport default decorate;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.cards>.cards-container{list-style:none;margin:0;padding:0;display:grid;grid-template-columns:repeat(auto-fill, minmax(278px, 1fr));grid-gap:16px}.cards>.cards-container>.cards-element{background-color:rgba(0,0,0,0);text-align:center;display:flex;flex-direction:column}.cards .cards-card-body{margin:16px;flex:1;height:100%;display:flex;flex-direction:column}.cards .cards-card-body p{margin:0}.cards .cards-card-body p:nth-of-type(2){font-size:16px;padding:0 1rem .5rem;margin-bottom:auto}.cards .cards-card-body a{margin:0;border:.0625rem solid rgba(0,0,0,0);font-size:16px;font-weight:400;background-color:#f0ebe2;color:#484745;border-color:#484745;border-radius:4px;min-width:11.1875rem;padding:.5rem 0}.cards .cards-card-body a:hover{text-decoration:none;background-color:var(--bg-color-red);color:#fff}.cards .cards-card-image{line-height:0}.cards .cards-card-body>*:first-child{margin-top:0}.cards>.cards-container>.cards-element img{width:100%;aspect-ratio:4/3;object-fit:cover}.cards.grid-3>.cards-container{display:grid;grid-template-columns:1fr 1fr 1fr;grid-gap:24px 30px}.cards.grid-3>.cards-container .cards-card-image{line-height:0;position:relative}.cards.grid-3>.cards-container .cards-card-image p{margin:0}.cards.grid-3>.cards-container .cards-card-image p:last-of-type{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);background-color:rgba(0,0,0,.5);width:100%;height:100%;display:flex;align-items:center;justify-content:center;color:#fff}.cards.grid-2>.cards-container{display:grid;grid-template-columns:1fr 1fr;grid-gap:24px 30px}@media(width <= 768px){.cards.grid-3>.cards-container,.cards.grid-2>.cards-container{grid-template-columns:unset}}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/blocks/cards/cards.scss\"],\"names\":[],\"mappings\":\"AACE,wBACE,eAAA,CACA,QAAA,CACA,SAAA,CACA,YAAA,CACA,2DAAA,CACA,aAAA,CAEA,uCACE,8BAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CAIJ,wBACE,WAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CAEA,0BAOE,QAAA,CANA,yCACE,cAAA,CACA,oBAAA,CACA,kBAAA,CAMJ,0BACE,QAAA,CACA,mCAAA,CACA,cAAA,CACA,eAAA,CACA,wBAAA,CACA,aAAA,CACA,oBAAA,CACA,iBAAA,CACA,oBAAA,CACA,eAAA,CAEA,gCACE,oBAAA,CACA,oCAAA,CACA,UAAA,CAKN,yBACE,aAAA,CAGF,sCACE,YAAA,CAGF,2CACE,UAAA,CACA,gBAAA,CACA,gBAAA,CAGF,+BACE,YAAA,CACA,iCAAA,CACA,kBAAA,CAEA,iDACE,aAAA,CACA,iBAAA,CAEA,mDACE,QAAA,CAEA,gEACE,iBAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CACA,+BAAA,CACA,UAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,UAAA,CAMR,+BACE,YAAA,CACA,6BAAA,CACA,kBAAA,CAQJ,uBAEI,8DACE,2BAAA,CAAA\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","Cards","cards","showSecondButton","_jsx","className","children","map","card","index","_jsxs","type","imageSide","imgSourceType","srcSet","imgSourceSrc","loading","alt","src","imgSrc","replace","text","bodySide","title","textBody","href","firstButtonHref","firstButtonText","secondButtonHref","secondButtonText","displayName","async","cardsProps","block","forEach","row","firstElementChild","firstChild","secondChild","nextElementSibling","querySelector","getAttribute","img","innerHTML","firstButton","secondButton","querySelectorAll","push","classList","contains","extractContentFromDOM","ReactDOM","render","StrictMode","___CSS_LOADER_EXPORT___","module","id"],"sourceRoot":""}