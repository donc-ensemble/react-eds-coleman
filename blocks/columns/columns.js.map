{"version":3,"file":"blocks/columns/columns.js","mappings":"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","sources":["webpack://eds-react-coleman/./src/blocks/columns/columns.scss?6157","webpack://eds-react-coleman/./src/blocks/columns/columns.tsx","webpack://eds-react-coleman/./src/blocks/columns/columns.scss"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./columns.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./columns.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { StrictMode, useMemo } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./columns.scss\";\n\ntype ColumnsProps = {\n  leftImageSources?: ImageSource[];\n  leftListItems?: ListItem[];\n  leftText?: string;\n  rightImageSources?: ImageSource[];\n};\n\ntype ImageSource = { type: string; src: string };\ntype ListItem = { link: string; text: string };\n\nconst extractLeftImageSources = (mainDiv: HTMLDivElement): ImageSource[] => {\n  const leftImg = mainDiv.querySelector(\"picture\")!;\n  const leftImgSource = leftImg.querySelectorAll(\"source\");\n  const leftImgTag = leftImg.querySelector(\"img\")!;\n\n  const sources: ImageSource[] = [];\n  leftImgSource.forEach((item) => {\n    const sourceItem = {\n      type: item.getAttribute(\"type\")!,\n      src: item.getAttribute(\"srcset\")!,\n    };\n    sources.push(sourceItem);\n  });\n\n  const pictureItem = {\n    type: \"image\",\n    src: leftImgTag.getAttribute(\"src\")!,\n  };\n  sources.push(pictureItem);\n\n  return sources.map((item) => ({\n    ...item,\n    src: item.src.replace(\"format=png\", \"format=webply\"),\n  }));\n};\n\nconst extractLeftListItems = (mainDiv: HTMLDivElement): ListItem[] => {\n  const list = mainDiv.querySelectorAll(\"ul li a\");\n  const leftListItems: ListItem[] = [];\n  list.forEach((item) => {\n    const listItem = {\n      link: item.getAttribute(\"href\")!,\n      text: item.getAttribute(\"title\")!,\n    };\n    leftListItems.push(listItem);\n  });\n\n  return leftListItems;\n};\n\nconst extractRightImageSources = (mainDiv: HTMLDivElement): ImageSource[] => {\n  const picture = mainDiv.querySelector(\"div:nth-of-type(2) picture\")!;\n  const sources = picture.querySelectorAll(\"source\");\n  const img = picture.querySelector(\"img\")!;\n\n  const sourcesList: ImageSource[] = [];\n  sources.forEach((item) => {\n    const sourceItem = {\n      type: item.getAttribute(\"type\")!,\n      src: item.getAttribute(\"srcset\")!,\n    };\n    sourcesList.push(sourceItem);\n  });\n\n  const pictureItem = {\n    type: \"image\",\n    src: img.getAttribute(\"src\")!,\n  };\n  sourcesList.push(pictureItem);\n\n  return sourcesList.map((item) => ({\n    ...item,\n    src: item.src.replace(\"format=png\", \"format=webply\"),\n  }));\n};\n\nconst extractContentFromDOM = (block: HTMLElement): ColumnsProps => {\n  const mainDiv = block.querySelector(\"div\")!;\n\n  const leftImageSources = extractLeftImageSources(mainDiv);\n  const leftText = mainDiv.querySelector(\"p:nth-of-type(2)\")?.innerHTML;\n  const leftListItems = extractLeftListItems(mainDiv);\n  const rightImageSources = extractRightImageSources(mainDiv);\n\n  return {\n    leftImageSources,\n    leftListItems,\n    leftText,\n    rightImageSources,\n  };\n};\n\nexport const Columns: React.FC<ColumnsProps> = ({\n  leftImageSources,\n  leftListItems,\n  leftText,\n  rightImageSources,\n}) => {\n  const leftListElements = useMemo(\n    () =>\n      (leftListItems ?? []).map((item, index) => (\n        <li key={index}>\n          <a href={item.link} title={item.text}>\n            {item.text}\n          </a>\n        </li>\n      )),\n    [leftListItems],\n  );\n\n  const leftImgElements = useMemo(\n    () =>\n      (leftImageSources ?? []).map((item, index) =>\n        item.type !== \"image\" ? (\n          <source\n            key={index}\n            type={item.type}\n            srcSet={item.src}\n            media=\"(min-width: 600px)\"\n          />\n        ) : (\n          <img\n            key={index}\n            loading=\"eager\"\n            alt=\"picture\"\n            src={item.src}\n            width=\"801\"\n            height=\"251\"\n          />\n        ),\n      ),\n    [leftImageSources],\n  );\n\n  const rightImgElements = useMemo(\n    () =>\n      (rightImageSources ?? []).map((item) =>\n        item.type !== \"image\" ? (\n          <source\n            type={item.type}\n            srcSet={item.src}\n            media=\"(min-width: 600px)\"\n          />\n        ) : (\n          <img\n            loading=\"lazy\"\n            alt=\"picture\"\n            src={item.src}\n            width=\"533\"\n            height=\"349\"\n          />\n        ),\n      ),\n    [rightImageSources],\n  );\n\n  return (\n    <div>\n      <div>\n        <p>\n          <picture>{leftImgElements}</picture>\n        </p>\n        <p>{leftText}</p>\n        <ul>{leftListElements}</ul>\n      </div>\n      <div className=\"columns-img-col\">\n        <picture>{rightImgElements}</picture>\n      </div>\n    </div>\n  );\n};\nColumns.displayName = \"Columns\";\n\nconst decorate = async (block: HTMLElement) => {\n  const columnsProps = extractContentFromDOM(block);\n\n  ReactDOM.createRoot(block).render(\n    <StrictMode>\n      <Columns {...columnsProps} />\n    </StrictMode>,\n  );\n};\n\nexport default decorate;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.columns>div{display:flex;flex-direction:column}.columns img{width:100%}.columns>div>div{order:1}.columns>div>.columns-img-col{order:0}.columns>div>.columns-img-col img{display:block}.columns.full-width>div{gap:unset}.columns.full-width>div:not(.columns-img-col){background-color:#354856}.columns.full-width .columns-img-col{order:1}.columns.full-width>div>div:not(.columns-img-col){display:flex;flex-direction:column;align-items:center;justify-content:center;padding:1.5rem 0}.columns.full-width>div>div:not(.columns-img-col) img{max-height:190px;width:auto;object-fit:contain}.columns.full-width p{color:#fff;font-size:16px;text-align:center;margin:0}.columns.full-width>div>div:not(.columns-img-col) p:nth-of-type(2){max-width:650px}.columns.full-width>div>div:not(.columns-img-col) ul{display:flex;flex-direction:column;justify-content:center;align-items:center;list-style:none;padding:0;gap:2rem}.columns.full-width>div>div:not(.columns-img-col) ul li a{background-color:#f0ebe2;color:#484745;border-color:#484745;font-size:14px;padding:1rem 2.5rem;border-radius:4px}.columns.full-width>div>div:not(.columns-img-col) ul li a:hover{text-decoration:none;background-color:var(--bg-color-red);color:#fff}@media(width >= 900px){.columns>div{align-items:center;flex-direction:unset;gap:32px}.columns>div>div{flex:1;order:unset}.columns.full-width>div>div:not(.columns-img-col) ul{flex-direction:row}}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/blocks/columns/columns.scss\"],\"names\":[],\"mappings\":\"AACE,aACE,YAAA,CACA,qBAAA,CAGF,aACE,UAAA,CAIA,iBACE,OAAA,CAGF,8BACE,OAAA,CAEA,kCACE,aAAA,CAMJ,wBACE,SAAA,CAEA,8CACE,wBAAA,CAIJ,qCACE,OAAA,CAGF,kDACE,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,gBAAA,CAEA,sDACE,gBAAA,CACA,UAAA,CACA,kBAAA,CAIJ,sBACE,UAAA,CACA,cAAA,CACA,iBAAA,CACA,QAAA,CAIA,mEACE,eAAA,CAGF,qDACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,eAAA,CACA,SAAA,CACA,QAAA,CAEA,0DACE,wBAAA,CACA,aAAA,CACA,oBAAA,CACA,cAAA,CACA,mBAAA,CACA,iBAAA,CAEA,gEACE,oBAAA,CACA,oCAAA,CACA,UAAA,CAWZ,uBAEI,aACE,kBAAA,CACA,oBAAA,CACA,QAAA,CAEA,iBACE,MAAA,CACA,WAAA,CAIJ,qDACE,kBAAA,CAAA\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","Columns","leftImageSources","leftListItems","leftText","rightImageSources","leftListElements","useMemo","map","item","index","_jsx","children","href","link","title","text","leftImgElements","type","srcSet","src","media","loading","alt","width","height","rightImgElements","_jsxs","className","displayName","async","columnsProps","block","mainDiv","querySelector","leftImg","leftImgSource","querySelectorAll","leftImgTag","sources","forEach","sourceItem","getAttribute","push","pictureItem","replace","extractLeftImageSources","innerHTML","list","listItem","extractLeftListItems","picture","img","sourcesList","extractRightImageSources","extractContentFromDOM","ReactDOM","render","StrictMode","___CSS_LOADER_EXPORT___","module","id"],"sourceRoot":""}