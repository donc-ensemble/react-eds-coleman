{"version":3,"file":"scripts/scripts.js","mappings":"4GAiCAA,eAAeC,UACP,QAAQ,GAAGC,OAAOC,IAAIC,iCAC5B,IACOF,OAAOG,SAASC,SAASC,SAAS,cAAcC,eAAeC,QAAQ,eAAgB,OAC9F,CAAE,MAAOC,GAET,CACF,CAoBO,SAASC,EAAaC,IAE3B,QAAgBA,IAChB,QAAcA,GAjBhB,SAAyBA,GACvB,KA5BF,SAAwBA,GACtB,MAAMC,EAAKD,EAAKE,cAAc,MACxBC,EAAUH,EAAKE,cAAc,WAEnC,GAAID,GAAME,GAAYF,EAAGG,wBAAwBD,GAAWE,KAAKC,4BAA8B,CAC7F,MAAMC,EAAUC,SAASC,cAAc,OACvCF,EAAQG,QAAO,QAAW,OAAQ,CAAEC,MAAO,CAACR,EAASF,MACrDD,EAAKY,QAAQL,EACf,CACF,CAoBIM,CAAeb,EACjB,CAAE,MAAOc,GAEPC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,CAWEE,CAAgBhB,IAChB,QAAiBA,IACjB,QAAeA,EACjB,EA8DAZ,uBAxDAA,eAAyB6B,GACvBT,SAASU,gBAAgBC,KAAO,MAChC,UACA,MAAMnB,EAAOiB,EAAIf,cAAc,QAC3BF,IACFD,EAAaC,GACbQ,SAASY,KAAKC,UAAUC,IAAI,gBACtB,QAAYtB,EAAKE,cAAc,YAAa,OAGpD,KAEMZ,OAAOiC,YAAc,KAAO3B,eAAe4B,QAAQ,kBACrDnC,GAEJ,CAAE,MAAOS,GAET,CACF,CAuCQ2B,CAAUjB,gBAjClBpB,eAAwB6B,GACtB,MAAMjB,EAAOiB,EAAIf,cAAc,cACzB,QAAaF,GAEnB,MAAM,KAAE0B,GAASpC,OAAOG,SAClBkC,IAAUD,GAAOT,EAAIW,eAAeF,EAAKG,UAAU,IACrDH,GAAQC,GAASA,EAAQG,kBAE7B,QAAWb,EAAIf,cAAc,YAC7B,QAAWe,EAAIf,cAAc,YAE7B,QAAQ,GAAGZ,OAAOC,IAAIC,uCACtBH,GACF,CAqBQ0C,CAASvB,UAbflB,OAAO0C,YACL,IACEC,OAEE,GAAG3C,OAAOC,IAAIC,oCAElB,IASJ,CAEA0C,E","sources":["webpack://eds-react-coleman/../scripts/_scripts.js"],"sourcesContent":["import {\n  buildBlock,\n  loadHeader,\n  loadFooter,\n  decorateButtons,\n  decorateIcons,\n  decorateSections,\n  decorateBlocks,\n  decorateTemplateAndTheme,\n  waitForFirstImage,\n  loadSection,\n  loadSections,\n  loadCSS,\n} from './aem.js';\n\n/**\n * Builds hero block and prepends to main in a new section.\n * @param {Element} main The container element\n */\nfunction buildHeroBlock(main) {\n  const h1 = main.querySelector('h1');\n  const picture = main.querySelector('picture');\n  // eslint-disable-next-line no-bitwise\n  if (h1 && picture && (h1.compareDocumentPosition(picture) & Node.DOCUMENT_POSITION_PRECEDING)) {\n    const section = document.createElement('div');\n    section.append(buildBlock('hero', { elems: [picture, h1] }));\n    main.prepend(section);\n  }\n}\n\n/**\n * load fonts.css and set a session storage flag\n */\nasync function loadFonts() {\n  await loadCSS(`${window.hlx.codeBasePath}/styles/fonts.css`);\n  try {\n    if (!window.location.hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n  } catch (e) {\n    // do nothing\n  }\n}\n\n/**\n * Builds all synthetic blocks in a container element.\n * @param {Element} main The container element\n */\nfunction buildAutoBlocks(main) {\n  try {\n    buildHeroBlock(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}\n\n/**\n * Decorates the main element.\n * @param {Element} main The main element\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function decorateMain(main) {\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n}\n\n/**\n * Loads everything needed to get to LCP.\n * @param {Element} doc The container element\n */\nasync function loadEager(doc) {\n  document.documentElement.lang = 'en';\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    document.body.classList.add('appear');\n    await loadSection(main.querySelector('.section'), waitForFirstImage);\n  }\n\n  try {\n    /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n    if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n      loadFonts();\n    }\n  } catch (e) {\n    // do nothing\n  }\n}\n\n/**\n * Loads everything that doesn't need to be delayed.\n * @param {Element} doc The container element\n */\nasync function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadSections(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header'));\n  loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`);\n  loadFonts();\n}\n\n/**\n * Loads everything that happens a lot later,\n * without impacting the user experience.\n */\nfunction loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(\n    () =>\n      import(\n        /* webpackIgnore: true */\n        `${window.hlx.codeBasePath}/scripts/delayed.js`\n      ),\n    3000,\n  );\n  // load anything that can be postponed to the latest here\n}\n\nasync function loadPage() {\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}\n\nloadPage();\n"],"names":["async","loadFonts","window","hlx","codeBasePath","location","hostname","includes","sessionStorage","setItem","e","decorateMain","main","h1","querySelector","picture","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","section","document","createElement","append","elems","prepend","buildHeroBlock","error","console","buildAutoBlocks","doc","documentElement","lang","body","classList","add","innerWidth","getItem","loadEager","hash","element","getElementById","substring","scrollIntoView","loadLazy","setTimeout","import","loadPage"],"sourceRoot":""}